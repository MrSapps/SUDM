language: cpp

env:
  global:
   # The next declaration is the encrypted COVERITY_SCAN_TOKEN, created
   #   via the "travis encrypt" command using the project repo's public key
   - secure: "A4JeyJ/faUkHRFCwKD/l7I6/zY4Jzs9SFxrRxxcvqFCawisCZDK3myw1ZMSEFp6bNBC1onWrEbBp7wgQ3aW5bf+xVtNaHvxvGvwOQMY8enFsTfgZ8YA4WTBwqeaFa6tUOC4/u7cQwTK2vlNZxpbATIOJhseOSi0ExD+8igyi4WU="
   - secure: "lbql5U+YxidgVE9xyyL78hhkYMI1TfVfl1JYsV8zLwhiEF7hvi2cKYzJEuQjzc4nlAzKXP2iBrCzy5aE4mh/0P7wnHMGuD4l/ixdAlz+QQedK0siw3G9lt8j7Fsn/IucRhFu0k8kwltQsHtq2+E5eCsAqJkwxNPX0xshuV2x6Mk="

addons:
  coverity_scan:
    project:
      name: "paulsapps/SUDM"
      description: "Build submitted via Travis CI"
    notification_email: coverityscan@paulsapps.com
    build_command_prepend: "mkdir build; cd build"
    build_command: "cmake ..; make -j4"
    branch_pattern: coverity_scan

compiler:
  - clang
  - gcc
  
before_install:
  - sudo add-apt-repository ppa:boost-latest/ppa -y
  - sudo add-apt-repository ppa:ubuntu-toolchain-r/test -y
  - if [ "$CXX" == "clang++" ]; then sudo add-apt-repository ppa:h-rayflood/llvm -y; fi
  - sudo apt-get update
  - sudo apt-get install --allow-unauthenticated boost1.55
  - if [ "$CXX" == "g++" ]; then sudo apt-get install --allow-unauthenticated gcc-4.9; fi
  - if [ "$CXX" == "g++" ]; then sudo apt-get install --allow-unauthenticated g++-4.9; fi
  - if [ "$CXX" == "g++" ]; then sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.9 20; fi
  - if [ "$CXX" == "g++" ]; then sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-4.9 20; fi
  - if [ "$CXX" == "g++" ]; then sudo update-alternatives --config gcc; fi
  - if [ "$CXX" == "g++" ]; then sudo update-alternatives --config g++; fi
  - if [ "$CXX" == "clang++" ]; then sudo apt-get install --allow-unauthenticated -qq clang-3.4; fi
  - if [ "$CXX" == "clang++" ]; then export CXX="clang++-3.4"; fi
  - if [ "$CXX" == "clang++" ]; then export CXX="clang++-3.4"; fi
  - if [ "$CXX" == "g++" ]; then sudo gem install coveralls-lcov; fi
  - if [ "$CXX" == "g++" ]; then sudo apt-get install lcov; fi
  
before_script:
  - $CXX --version
  - mkdir build
  - cd build
  
after_success:
  - if [ "$CXX" == "g++" ]; then lcov --directory . --capture --output-file coverage.info; fi
  - if [ "$CXX" == "g++" ]; then llcov --remove coverage.info '/usr/*' --output-file coverage.info; fi
  - if [ "$CXX" == "g++" ]; then llcov --list coverage.info; fi
  - if [ "$CXX" == "g++" ]; then lcoveralls-lcov --repo-token $TOKEN coverage.info; fi
  
script: 
  - cmake ..
  - if [ ${COVERITY_SCAN_BRANCH} != 1 ]; then make -j2; fi
  - if [ ${COVERITY_SCAN_BRANCH} != 1 ]; then ctest --output-on-failure; fi

